{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","newPerson","post","id","url","console","log","delete","newObject","put","Search","handleChange","value","onChange","Form","newName","handleNameChange","newNumber","handleNumberChange","handleAddClick","type","onClick","Entry","person","handleRemovePerson","name","number","data-id","data-name","Notification","message","className","Error","Numbers","App","useState","persons","setPersons","setNewName","setNewNumber","searchQuery","setSearchQuery","notification","setNotification","error","setError","useEffect","personService","then","res","data","e","confirmRemoveOfPerson","target","dataset","filter","window","confirm","createPersonFromState","displayNotification","setTimeout","displayError","preventDefault","find","toLowerCase","newEntry","map","catch","updatePersonInPhonebook","concat","addPersonToPhonebook","indexOf","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a8d8ad1.chunk.js","sourcesContent":["import axios from 'axios';\nconst baseUrl = 'http://localhost:3001/api/persons/';\n\nconst getAll = () => {\n\treturn axios.get(baseUrl);\n};\n\nconst create = (newPerson) => {\n\treturn axios.post(baseUrl, newPerson);\n};\n\nconst remove = (id) => {\n\tconst url = baseUrl + id;\n\tconsole.log(url);\n\treturn axios.delete(url);\n};\n\nconst update = (id, newObject) => {\n\treturn axios.put(baseUrl + id, newObject);\n};\n\nexport default {\n\tgetAll: getAll,\n\tcreate: create,\n\tremove: remove,\n\tupdate: update,\n};\n","import React, { useState, useEffect } from 'react';\nimport personService from './services/persons';\nimport './App.css';\n\n//Components\nconst Search = ({ handleChange, value }) => {\n\treturn (\n\t\t<div>\n\t\t\tfilter <input onChange={handleChange} value={value} />\n\t\t</div>\n\t);\n};\n\nconst Form = ({ newName, handleNameChange, newNumber, handleNumberChange, handleAddClick }) => {\n\treturn (\n\t\t<form>\n\t\t\t<div>\n\t\t\t\tname: <input onChange={handleNameChange} value={newName} />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\tnumber: <input onChange={handleNumberChange} value={newNumber} />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<button type=\"submit\" onClick={handleAddClick}>\n\t\t\t\t\tadd\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nconst Entry = ({ person, handleRemovePerson }) => {\n\treturn (\n\t\t<div>\n\t\t\t{person.name} {person.number}{' '}\n\t\t\t<button data-id={person.id} data-name={person.name} onClick={handleRemovePerson}>\n\t\t\t\tdelete\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nconst Notification = ({ message }) => {\n\tif (message === '') {\n\t\treturn null;\n\t} else {\n\t\treturn <div className=\"notification\">{message}</div>;\n\t}\n};\n\nconst Error = ({ message }) => {\n\tif (message === '') {\n\t\treturn null;\n\t} else {\n\t\treturn <div className=\"error\">{message}</div>;\n\t}\n};\n\nconst Numbers = () => {\n\treturn <h2>Numbers</h2>;\n};\n\n//App\nconst App = () => {\n\t//States\n\tconst [persons, setPersons] = useState([]);\n\tconst [newName, setNewName] = useState('');\n\tconst [newNumber, setNewNumber] = useState('');\n\tconst [searchQuery, setSearchQuery] = useState('');\n\tconst [notification, setNotification] = useState('');\n\tconst [error, setError] = useState('');\n\n\t//Functions\n\tuseEffect(() => {\n\t\tpersonService.getAll().then((res) => {\n\t\t\tsetPersons(res.data);\n\t\t});\n\t}, []);\n\n\tconst handleRemovePerson = (e) => {\n\t\tif (confirmRemoveOfPerson(e.target.dataset.name)) {\n\t\t\tpersonService.remove(e.target.dataset.id).then((res) => {\n\t\t\t\tsetPersons(\n\t\t\t\t\tpersons.filter((person) => {\n\t\t\t\t\t\treturn person.id !== +e.target.dataset.id;\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t};\n\n\tconst confirmRemoveOfPerson = (name) => {\n\t\treturn window.confirm(`Delete ${name}`);\n\t};\n\n\tconst handleNameChange = (e) => {\n\t\tsetNewName(e.target.value);\n\t};\n\n\tconst handleNumberChange = (e) => {\n\t\tsetNewNumber(e.target.value);\n\t};\n\n\tconst handleFilterChange = (e) => {\n\t\tsetSearchQuery(e.target.value);\n\t};\n\tconst nameIsAlreadyInPhonebook = () => {\n\t\treturn persons.find((person) => person.name.toLowerCase() === newName.toLowerCase());\n\t};\n\n\tconst addPersonToPhonebook = () => {\n\t\tconst newEntry = createPersonFromState();\n\n\t\tpersonService.create(newEntry).then((res) => {\n\t\t\tsetPersons(persons.concat(res.data));\n\t\t\tdisplayNotification(`${newName} added to phonebook`);\n\t\t});\n\t};\n\n\tconst createPersonFromState = () => {\n\t\treturn {\n\t\t\tname: newName,\n\t\t\tnumber: newNumber,\n\t\t};\n\t};\n\n\tconst updatePersonInPhonebook = () => {\n\t\tconst newEntry = createPersonFromState();\n\n\t\tconst foundPerson = persons.find((person) => {\n\t\t\treturn person.name.toLowerCase() === newName.toLowerCase();\n\t\t});\n\n\t\tconst id = foundPerson.id;\n\n\t\tpersonService\n\t\t\t.update(id, newEntry)\n\t\t\t.then((res) => {\n\t\t\t\tsetPersons(\n\t\t\t\t\tpersons.map((person) => {\n\t\t\t\t\t\treturn person.id !== id ? person : res.data;\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t\tdisplayNotification(`Number for ${newName} updated to ${newNumber}`);\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tdisplayError(`${newName} already removed from phonebook`);\n\t\t\t\tsetPersons(\n\t\t\t\t\tpersons.filter((person) => {\n\t\t\t\t\t\treturn person.id !== id;\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t});\n\t};\n\n\tconst handleAddClick = (e) => {\n\t\te.preventDefault();\n\t\tif (nameIsAlreadyInPhonebook()) {\n\t\t\tif (window.confirm(`${newName} is already in phonebook. Replace old number with new one?`)) {\n\t\t\t\tupdatePersonInPhonebook();\n\t\t\t}\n\t\t} else {\n\t\t\taddPersonToPhonebook();\n\t\t}\n\t\tsetNewName('');\n\t\tsetNewNumber('');\n\t};\n\n\tconst filterByName = () => {\n\t\treturn persons.filter((person) => {\n\t\t\treturn person.name.toLowerCase().indexOf(searchQuery.toLowerCase()) !== -1;\n\t\t});\n\t};\n\n\tconst renderPersons = (arrayOfPersons) => {\n\t\treturn arrayOfPersons.map((person) => {\n\t\t\treturn <Entry key={person.name} person={person} handleRemovePerson={handleRemovePerson} />;\n\t\t});\n\t};\n\n\tconst filterAndRenderPersons = () => {\n\t\treturn renderPersons(filterByName());\n\t};\n\n\tconst displayNotification = (message) => {\n\t\tsetNotification(message);\n\t\tsetTimeout(() => setNotification(''), 5000);\n\t};\n\n\tconst displayError = (message) => {\n\t\tsetError(message);\n\t\tsetTimeout(() => setError(''), 5000);\n\t};\n\n\t//JSX\n\treturn (\n\t\t<div>\n\t\t\t<Notification message={notification} />\n\t\t\t<Error message={error} />\n\t\t\t<h2>Phonebook</h2>\n\t\t\t<Search handleChange={handleFilterChange} value={searchQuery} />\n\t\t\t<Form\n\t\t\t\tnewName={newName}\n\t\t\t\thandleNameChange={handleNameChange}\n\t\t\t\tnewNumber={newNumber}\n\t\t\t\thandleNumberChange={handleNumberChange}\n\t\t\t\thandleAddClick={handleAddClick}\n\t\t\t/>\n\n\t\t\t<Numbers />\n\n\t\t\t{filterAndRenderPersons()}\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}